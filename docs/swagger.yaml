definitions:
  dto.ClientDTO:
    properties:
      address:
        type: string
      mail:
        type: string
      name:
        type: string
      phone_number:
        type: string
      products:
        items:
          $ref: '#/definitions/dto.ProductDTO'
        type: array
    type: object
  dto.ProductDTO:
    properties:
      address:
        type: string
      available:
        type: boolean
      dimension:
        type: string
      drawer_id:
        type: integer
      drawer_locker_id:
        type: integer
      estimated_date:
        type: string
      name:
        type: string
      pass_code:
        type: string
      quantity:
        type: number
      weight:
        type: number
    type: object
  model.Client:
    properties:
      address:
        type: string
      id:
        type: integer
      mail:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  model.Drawer:
    properties:
      available:
        type: boolean
      dimension:
        type: string
      id:
        type: integer
      locker_id:
        type: integer
    type: object
  model.Locker:
    properties:
      address:
        type: string
      camera_ip:
        type: string
      id:
        type: integer
      latitude:
        type: number
      locker_ip:
        type: string
      longitude:
        type: number
    type: object
  model.Product:
    properties:
      address:
        type: string
      available:
        type: boolean
      client_id:
        type: integer
      dimension:
        type: string
      drawer_id:
        type: integer
      drawer_locker_id:
        type: integer
      estimated_date:
        type: string
      id:
        type: integer
      name:
        type: string
      pass_code:
        type: string
      quantity:
        type: number
      weight:
        type: number
    type: object
externalDocs:
  description: OpenAPI
host: localhost:8080
info:
  contact: {}
  description: API de testes FETIN
  title: Sherlock API
  version: "1.0"
paths:
  /api/client:
    post:
      consumes:
      - application/json
      description: Criar um novo cliente na base de dados
      parameters:
      - description: Dados do Cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/model.Client'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Client'
      summary: Criar cliente
      tags:
      - clients
  /api/client/{id}:
    get:
      description: Obter um cliente da base de dados pelo seu ID
      parameters:
      - description: ID do Cliente
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Client'
      summary: Obter cliente por ID
      tags:
      - clients
  /api/client/all:
    get:
      description: Obter todos os clientes da base de dados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Client'
            type: array
      summary: Obter todos os clientes
      tags:
      - clients
  /api/drawer:
    post:
      consumes:
      - application/json
      description: Criar uma nova gaveta na base de dados
      parameters:
      - description: Dados da Gaveta
        in: body
        name: drawer
        required: true
        schema:
          $ref: '#/definitions/model.Drawer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Drawer'
      summary: Criar gaveta
      tags:
      - drawers
  /api/drawer/{id}:
    get:
      description: Obter uma gaveta da base de dados pelo seu ID
      parameters:
      - description: ID da Gaveta
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Drawer'
      summary: Obter gaveta por ID
      tags:
      - drawers
  /api/drawer/in_locker/{locker_id}:
    get:
      description: Obter todas as gavetas de um armário da base de dados pelo ID do
        armário
      parameters:
      - description: ID do Armário
        in: path
        name: locker_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Drawer'
            type: array
      summary: Obter gavetas por ID do Armário
      tags:
      - drawers
  /api/locker:
    post:
      consumes:
      - application/json
      description: Criar um novo armário na base de dados
      parameters:
      - description: Dados do Armário
        in: body
        name: locker
        required: true
        schema:
          $ref: '#/definitions/model.Locker'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Locker'
      summary: Criar armário
      tags:
      - lockers
  /api/locker/{id}:
    get:
      description: Obter um armário da base de dados pelo seu ID
      parameters:
      - description: ID do Armário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Locker'
      summary: Obter armário por ID
      tags:
      - lockers
  /api/locker/all:
    get:
      description: Obter todos os armários da base de dados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Locker'
            type: array
      summary: Obter todos os armários
      tags:
      - lockers
  /api/product:
    post:
      consumes:
      - application/json
      description: Criar um novo cliente e produtos associados na base de dados
      parameters:
      - description: Dados do Cliente com Produtos
        in: body
        name: clientDTO
        required: true
        schema:
          $ref: '#/definitions/dto.ClientDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Criar cliente e produtos
      tags:
      - clients
      - products
  /api/product/{id}:
    get:
      description: Obter um produto da base de dados pelo seu ID
      parameters:
      - description: ID do Produto
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
      summary: Obter produto por ID
      tags:
      - products
  /api/product/all:
    get:
      description: Obter todos os produtos da base de dados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Obter todos os produtos
      tags:
      - products
swagger: "2.0"
